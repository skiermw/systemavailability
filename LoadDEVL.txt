// Load the DEVL environment

// Create Production environment
CREATE (devl:Environment {name:"DEVL"})

// Create ElasticSearch Server 1
CREATE (elast1:VM{
			ip:'10.4.4.71',
			name:'dcdevelasticsrv1',
			status: 'UP',
			system: 'PAS',
			type: 'DBServer'
		})
// Create ElasticSearch Server 2
CREATE (elast2:VM{
			ip:'10.4.4.72',
			name:'dcdeelasticsrv2',
			status: 'UP',
			system: 'PAS',
			type: 'DBServer'
		})
// Create ElasticSearch Server 3
CREATE (elast3:VM{
			ip:'10.4.4.73',
			name:'dcdeelasticsrv3',
			status: 'UP',
			system: 'PAS',
			type: 'DBServer'
		})
// Create MongoDB Server 1
CREATE (mongodb1:VM{
			ip:'10.10.35.11',
			name:'dcdevmongosrv1',
			status: 'UP',
			system: 'PAS',
			type: 'DBServer'
		})
// Create MongoDB Server 2
CREATE (mongodb2:VM{
			ip:'10.10.35.9',
			name:'dcdevmongosrv2',
			status: 'UP',
			system: 'PAS',
			type: 'DBServer'
		})
// Create MongoDB Server 3
CREATE (mongodb3:VM{
			ip:'10.10.35.13',
			name:'dcdevmongosrv3',
			status: 'UP',
			system: 'PAS',
			type: 'DBServer'
		})
// Create Cassandra DB Server 1
CREATE (cass1:VM{
			ip:'10.4.4.31',
			name:'dcdevcassandrasrv1',
			status: 'UP',
			system: 'PAS',
			type: 'DBServer'
		})
// Create Cassandra DB Server 2
CREATE (cass2:VM{
			ip:'10.4.4.32',
			name:'dcdevcassandrasrv2',
			status: 'UP',
			system: 'PAS',
			type: 'DBServer'
		})
// Create Cassandra DB Server 3
CREATE (cass3:VM{
			ip:'10.4.4.33',
			name:'dcdevcassandrasrv3',
			status: 'UP',
			system: 'PAS',
			type: 'DBServer'
		})
// Create Time Server 
CREATE (time:TimeServer{
			ip:'10.4.4.215',
			name:'dcdevtimesrv1',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})

// Create Billing App Server 
CREATE (billapp:AppServer{
			ip:'10.4.4.1',
			name:'billdevappsrv1',
			status: 'UP',
			system: 'Billing',
			type: 'VM'
		})
// Create PAS App Server 
CREATE (PASapp1:AppServer{
			ip:'10.4.4.62',
			name:'dcdevappsrv1',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})
// Create Say Discovery Server 
CREATE (disc:AppServer{
			ip:'10.4.4.2',
			name:'saydevdiscoverysrv1',
			status: 'UP',
			system: 'Infrastructure',
			type: 'VM'
		})
// Create User Management DB Server 
CREATE (umdb1:VM{
			ip:'10.4.4.172',
			name:'sayumdevdbsrv1',
			status: 'UP',
			system: 'UserMgmnt',
			type: 'DBServer'
		})
// *************************************
// Create Say Application Server 1
CREATE (app1:AppServer {
			ip:'10.10.35.2',
			name:'DCProdAppSrv1',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})


// Create MongoDB Server 1
CREATE (mongodb1:VM{
			ip:'10.10.35.8',
			name:'DCProdMongoSrv1',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})
// Create MongoDB Server 2
CREATE (mongodb2:VM{
			ip:'10.10.35.9',
			name:'DCProdMongoSrv2',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})
// Create MongoDB Server 3
CREATE (mongodb3:VM{
			ip:'10.10.35.10',
			name:'DCProdMongoSrv3',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})
// Create Cassandra DB Server 1
CREATE (cass1:VM{
			ip:'10.10.35.11',
			name:'DCProdCassandraSrv1',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})
// Create Cassandra Server 2
CREATE (cass2:VM{
			ip:'10.10.35.12',
			name:'DCProdCassandraSrv2',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})
// Create Cassandra Server 3
CREATE (cass3:VM{
			ip:'10.10.35.13',
			name:'DCProdCassandraSrv3',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})
// Create ElasticSearch Server 1
CREATE (elast1:VM{
			ip:'10.10.35.13',
			name:'DCProdElasticSrv1',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})
// Create ElasticSearch Server 2
CREATE (elast2:VM{
			ip:'10.10.35.13',
			name:'DCProdElasticSrv2',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})
// Create ElasticSearch Server 3
CREATE (elast3:VM{
			ip:'10.10.35.13',
			name:'DCProdElasticSrv3',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})
// Create RabbitMQ Server 1
CREATE (rabbit1:QueueServer{
			ip:'10.10.35.21',
			name:'DCProdQueueSrv1',
			status: 'UP',
			system: 'PAS',
			type: 'VM'
		})
// Create VMware Cluster 1
CREATE (cluster1:VMwareCluster{
			ip:'10.10.40.1',
			name:'DCCluster1',
			system: 'INFRASTRUCTURE',
			status: 'UP'
		})
// Create VMware Server 1
CREATE (vmsrv1:VMwareServer{
			ip:'10.10.40.1',
			name:'VMwareSrv1',
			status: 'UP',
			system: 'INFRASTRUCTURE',
			type: 'Hardware'
		})
// Create VMware Server 2
CREATE (vmsrv2:VMwareServer{
			ip:'10.10.40.2',
			name:'VMwareSrv2',
			system: 'INFRASTRUCTURE',
			status: 'UP',
			type: 'Hardware'
		})
// Create WebSphereMQ server
CREATE (wsmq1:QueueServer{
			ip:'10.10.40.2',
			name:'WebSphereMQ1',
			status: 'UP'
		})
// Create LPAR
CREATE (lpar1:LPAR{
			ip:'10.10.40.2',
			name:'PRODLPAR',
			system: 'INFRASTRUCTURE',
			status: 'UP'
		})
// Create Mainframe
CREATE (mf:Mainframe{
			ip:'10.10.40.1',
			name:'Mainframe',
			status: 'UP',
			system: 'INFRASTRUCTURE',
			type: 'Hardware'
		})
		
// Create Billing Website 1
CREATE (billweb1:WebServer {
			ip:'10.10.35.1',
			name:'BillWebServer1',
			status: 'UP',
			system: 'BILLING',
			type: 'VM'
		})

// Create Billing Application Server 1
CREATE (billapp1:AppServer {
			ip:'10.10.35.2',
			name:'BillProdAppSrv1',
			status: 'UP',
			system: 'BILLING',
			type: 'VM'
		})


// Create Billing DB Server 1
CREATE (billdb1:VM{
			ip:'10.10.35.8',
			name:'BillProdDBSrv1',
			status: 'UP',
			system: 'BILLING',
			type: 'VM'
		})
// Create VMware Billing Cluster 
CREATE (cluster2:VMwareCluster{
			ip:'10.10.40.1',
			name:'BillingCluster1',
			system: 'INFRASTRUCTURE',
			status: 'UP'
		})
// Create VMware Billing Server 1
CREATE (billvmsrv1:VMwareServer{
			ip:'10.10.40.1',
			name:'BillVMwareSrv1',
			status: 'UP',
			system: 'INFRASTRUCTURE',
			type: 'Hardware'
		})
// Create VMware Billing Server 2
CREATE (billvmsrv2:VMwareServer{
			ip:'10.10.40.2',
			name:'BillVMwareSrv2',
			system: 'INFRASTRUCTURE',
			status: 'UP',
			type: 'Hardware'
		})	
// Create Ratabase Server 1
CREATE (rate1:AppServer {
			ip:'10.10.35.2',
			name:'RatabaseSrv1',
			status: 'UP',
			system: 'Ratabase',
			type: 'VM'
		})
// Create Ratabase Server 2
CREATE (rate2:AppServer {
			ip:'10.10.35.2',
			name:'RatabaseSrv2',
			status: 'UP',
			system: 'Ratabase',
			type: 'VM'
		})

// Create Ratabase DB Server 1
CREATE (ratedb1:VM{
			ip:'10.10.35.8',
			name:'RatabaseDBSrv1',
			status: 'UP',
			system: 'Ratabase',
			type: 'VM'
		})
// Create Ratabase DB Server 2
CREATE (ratedb2:VM{
			ip:'10.10.35.8',
			name:'RatabaseDBSrv2',
			status: 'UP',
			system: 'Ratabase',
			type: 'VM'
		})
// Create VMware Ratabase Cluster 
CREATE (cluster3:VMwareCluster{
			ip:'10.10.40.1',
			name:'RatabaseCluster1',
			system: 'INFRASTRUCTURE',
			status: 'UP'
		})
// Create VMware Ratabase Server 1
CREATE (ratevmsrv1:VMwareServer{
			ip:'10.10.40.1',
			name:'RatabaseVMwareSrv1',
			status: 'UP',
			system: 'INFRASTRUCTURE',
			type: 'Hardware'
		})
// Create VMware Ratabase Server 2
CREATE (ratevmsrv2:VMwareServer{
			ip:'10.10.40.2',
			name:'RatabaseVMwareSrv2',
			system: 'INFRASTRUCTURE',
			status: 'UP',
			type: 'Hardware'
		})			
// Create User Management 
CREATE (umgw1:AppServer{
			ip:'10.10.40.2',
			name:'SAYPRODGWSRV1',
			system: 'USERMGMNT',
			status: 'UP',
			type: 'VM'
		})			
// Create User Management 
CREATE (umauth:AppServer{
			ip:'10.10.40.2',
			name:'SAYPRODAUTHSRV1',
			system: 'USERMGMNT',
			status: 'UP',
			type: 'VM'
		})
// Create User Management 
CREATE (umdisc:AppServer{
			ip:'10.10.40.2',
			name:'SAYPRODDISCSRV1',
			system: 'USERMGMNT',
			status: 'UP',
			type: 'VM'
		})
// Create User Management DB Server 
CREATE (umdb:VM{
			ip:'10.10.35.8',
			name:'SAYUMPRODDBSRV1',
			status: 'UP',
			system: 'USERMGMNT',
			type: 'VM'
		})		
// Create DevOps
CREATE (chef:DevOpsServer{
			ip:'10.10.35.8',
			name:'ChefServer',
			status: 'UP',
			system: 'DEVOPS',
			type: 'VM'
		})
// Create DevOps
CREATE (vag:DevOpsServer{
			ip:'10.10.35.8',
			name:'VagrantServer',
			status: 'UP',
			system: 'DEVOPS',
			type: 'VM'
		})
// Create DevOps
CREATE (knife:DevOpsServer{
			ip:'10.10.35.8',
			name:'KnifeServer',
			status: 'UP',
			system: 'DEVOPS',
			type: 'VM'
		})
// Create DevOps
CREATE (build:DevOpsServer{
			ip:'10.10.35.8',
			name:'BuildServer',
			status: 'UP',
			system: 'DEVOPS',
			type: 'VM'
		})
// Create DevOps
CREATE (repo:DevOpsServer{
			ip:'10.10.35.8',
			name:'RepoServer',
			status: 'UP',
			system: 'DEVOPS',
			type: 'VM'
		})
// Create DevOps
CREATE (log:DevOpsServer{
			ip:'10.10.35.8',
			name:'LogServer',
			status: 'UP',
			system: 'DEVOPS',
			type: 'VM'
		})
// Create Queues
CREATE (actq:Queue{
			name:'actuarial',
			status: 'UP',
			system: 'Infrastructure',
			type: 'RabbitMQ'
		})
CREATE (biq:Queue{
			name:'BI',
			status: 'UP',
			system: 'Infrastructure',
			type: 'RabbitMQ'
		})
CREATE (crmq:Queue{
			name:'CRM',
			status: 'UP',
			system: 'Infrastructure',
			type: 'RabbitMQ'
		})
CREATE (docmanq:Queue{
			name:'docman',
			status: 'UP',
			system: 'Infrastructure',
			type: 'RabbitMQ'
		})
CREATE (actqws:Queue{
			name:'actqws',
			status: 'UP',
			system: 'Infrastructure',
			type: 'WebSphereMQ'
		})
CREATE (bridgeprg:Program{
			name:'mqbridge',
			status: 'UP',
			system: 'Infrastructure',
			type: 'Java'
		})
// Setup DevOps
CREATE (pas)-[:NEEDS]->(chef)
CREATE (pas)-[:NEEDS]->(vag)
CREATE (pas)-[:NEEDS]->(knife)
CREATE (pas)-[:NEEDS]->(build)
CREATE (pas)-[:NEEDS]->(repo)
CREATE (pas)-[:NEEDS]->(log)
CREATE (chef)-[:NEEDS]->(cluster1)
CREATE (vag)-[:NEEDS]->(cluster1)
CREATE (knife)-[:NEEDS]->(cluster1)
CREATE (build)-[:NEEDS]->(cluster1)
CREATE (log)-[:NEEDS]->(cluster1)
// Setup User Management
CREATE (um)-[:NEEDS]->(umgw1)
CREATE (umgw1)-[:NEEDS]->(umauth)
CREATE (umauth)-[:NEEDS]->(umdb)
CREATE (umgw1)-[:NEEDS]->(umdisc)
CREATE (umgw1)-[:NEEDS]->(cluster1)
CREATE (umauth)-[:NEEDS]->(cluster1)
CREATE (umdb)-[:NEEDS]->(cluster1)
CREATE (umdisc)-[:NEEDS]->(cluster1)
// Setup Ratabase
CREATE (ratabase)-[:NEEDS]->(rate1)
CREATE (ratabase)-[:NEEDS]->(rate2)
CREATE (rate1)-[:NEEDS]->(ratedb1)
CREATE (rate1)-[:NEEDS]->(ratedb2)
CREATE (rate2)-[:NEEDS]->(ratedb1)
CREATE (rate2)-[:NEEDS]->(ratedb2)
CREATE (rate1)-[:NEEDS]->(cluster3)
CREATE (rate2)-[:NEEDS]->(cluster3)
CREATE (ratedb1)-[:NEEDS]->(cluster3)
CREATE (ratedb2)-[:NEEDS]->(cluster3)
CREATE (cluster3)-[:NEEDS]->(ratevmsrv1)
CREATE (cluster3)-[:NEEDS]->(ratevmsrv2)					
// Setup Billing 
CREATE (billing)-[:NEEDS]->(billweb1)
CREATE (billweb1)-[:NEEDS]->(billapp1)
CREATE (billapp1)-[:NEEDS]->(billdb1)
CREATE (billweb1)-[:NEEDS]->(cluster2)
CREATE (billapp1)-[:NEEDS]->(cluster2)
CREATE (billdb1)-[:NEEDS]->(cluster2)
CREATE (cluster2)-[:NEEDS]->(billvmsrv1)
CREATE (cluster2)-[:NEEDS]->(billvmsrv2)

// Connect PAS to web1
CREATE (pas)-[:NEEDS]->(web1)

// Connect web 1 app1
CREATE (web1)-[:NEEDS]->(app1)


CREATE (app1)-[:NEEDS]->(mongodb1)
CREATE (app1)-[:NEEDS]->(mongodb2)
CREATE (app1)-[:NEEDS]->(mongodb3)
CREATE (app1)-[:NEEDS]->(cass1)
CREATE (app1)-[:NEEDS]->(cass2)
CREATE (app1)-[:NEEDS]->(cass3)
CREATE (app1)-[:NEEDS]->(elast1)
CREATE (app1)-[:NEEDS]->(elast2)
CREATE (app1)-[:NEEDS]->(elast3)
CREATE (app1)-[:CONNECTS_TO]->(rabbit1)
CREATE (app1)-[:NEEDS]->(billing)
CREATE (app1)-[:NEEDS]->(ratabase)
CREATE (app1)-[:NEEDS]->(doc)
// Connect VMs to VMware cluster
CREATE (web1)-[:NEEDS]->(cluster1)
CREATE (app1)-[:NEEDS]->(cluster1)
CREATE (mongodb1)-[:NEEDS]->(cluster1)
CREATE (mongodb2)-[:NEEDS]->(cluster1)
CREATE (mongodb3)-[:NEEDS]->(cluster1)
CREATE (cass1)-[:NEEDS]->(cluster1)
CREATE (cass2)-[:NEEDS]->(cluster1)
CREATE (cass3)-[:NEEDS]->(cluster1)
CREATE (rabbit1)-[:NEEDS]->(cluster1)
CREATE (elast1)-[:NEEDS]->(cluster1)
CREATE (elast2)-[:NEEDS]->(cluster1)
CREATE (elast3)-[:NEEDS]->(cluster1)

// Connect RabbitMQ to queues
CREATE (rabbit1)-[:CONNECTS_TO]->(actq)
CREATE (rabbit1)-[:CONNECTS_TO]->(biq)
CREATE (rabbit1)-[:CONNECTS_TO]->(crmq)
CREATE (rabbit1)-[:CONNECTS_TO]->(docmanq)
CREATE (biq)-[:CONNECTS_TO]->(bi)
CREATE (crmq)-[:CONNECTS_TO]->(crm)
CREATE (docmanq)-[:CONNECTS_TO]->(doc)
CREATE (actq)-[:CONNECTS_TO]->(bridgeprg)
// Connect VMware cluster to hardware servers
CREATE (cluster1)-[:NEEDS]->(vmsrv1)
CREATE (cluster1)-[:NEEDS]->(vmsrv2)

// Connect WebSphereMQ 
CREATE (bridgeprg)-[:CONNECTS_TO]->(wsmq1)
CREATE (wsmq1)-[:CONNECTS_TO]->(actqws)
CREATE (wsmq1)-[:NEEDS]->(lpar1)
CREATE (lpar1)-[:NEEDS]->(mf)

// Connect Actuarial
CREATE (actuarial)-[:NEEDS]->(lpar1)
CREATE (actqws)-[:CONNECTS_TO]->(actuarial)